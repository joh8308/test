{"version":3,"sources":["meteor://ðŸ’»app/packages/elmarti:video-chat/lib/index.js","meteor://ðŸ’»app/packages/elmarti:video-chat/lib/publish.js","meteor://ðŸ’»app/packages/elmarti:video-chat/lib/call_log.js","meteor://ðŸ’»app/packages/elmarti:video-chat/lib/client.js","meteor://ðŸ’»app/packages/elmarti:video-chat/lib/server.js","meteor://ðŸ’»app/packages/elmarti:video-chat/lib/video.js"],"names":["Meteor","module","watch","require","v","Client","Services","Tracker","Video","CallLog","isClient","VideoCallServices","meteor","tracker","video","isServer","users","find","observe","removed","_id","$or","status","$ne","target","caller","forEach","update","call","$set","methods","answer","end","onError","err","data","user","publish","userId","exportDefault","Collection","export","args","callbacks","RTCConfiguration","RetryLimit","RetryCount","autorun","sub","subscribe","connection","_stream","on","handleStream","bind","msg","JSON","parse","collection","onTerminateCall","fields","callLog","stream","Streamer","id","handleTargetStream","onReceivePhoneCall","undefined","onTargetAccept","handleTargetAccept","streamData","offer","navigator","mediaDevices","getUserMedia","audio","then","localVideo","setStream","play","setupPeerConnection","catch","candidate","RTCIceCandidate","peerConnection","addIceCandidate","pause","remoteDescription","RTCPeerConnection","onPeerConnectionCreated","setPeerConnectionCallbacks","addStream","createTargetSession","createCallSession","onicecandidate","event","emit","stringify","oniceconnectionstatechange","iceConnectionState","error","Error","onaddstream","remoteVideo","setRemoteDescription","createAnswer","setLocalDescription","createOffer","local","remote","handleCallerStream","answerPhoneCall","endPhoneCall","check","streams","String","meteorUser","checkConnect","inCall","findOne","logId","insert","allowRead","allowWrite","session","onPlaying","onPause","element","onplaying","onpause","paused","console","log","muted","srcObject"],"mappings":"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","file":"/packages/elmarti_video-chat.js","sourcesContent":["//jshint esversion: 6\nimport { Meteor } from 'meteor/meteor';\nimport { Client } from './client';\nimport { Services } from './server';\nimport { Tracker } from \"meteor/tracker\";\nimport { Video } from './video';\n\nimport CallLog from './call_log';\n\nif( Meteor.isClient ){\n\tMeteor.VideoCallServices = new Client( {\n\t\tmeteor: Meteor,\n\t\ttracker: Tracker,\n\t\tvideo: Video } );\n}\nif( Meteor.isServer ){\n\tMeteor.users.find({\"status.online\": true}).observe({\n\t\tremoved: function ({_id}) {\n\t\t\tCallLog.find({\n\t\t\t\t$or: [{\n\t\t\t\t\tstatus: {\n\t\t\t\t\t\t$ne: 'FINISHED'\n\t\t\t\t\t},\n\t\t\t\t\ttarget: _id\n\t\t\t\t}, {\n\t\t\t\t\tstatus: {\n\t\t\t\t\t\t$ne: 'FINISHED'\n\t\t\t\t\t},\n\t\t\t\t\tcaller: _id\n\t\t\t\t}]\n\t\t\t}).forEach(call =>\n\t\t\t\tCallLog.update({\n\t\t\t\t\t_id: call._id\n\t\t\t\t}, {\n\t\t\t\t\t$set: {\n\t\t\t\t\t\tstatus: 'FINISHED'\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t}\n\t});\n\tMeteor.methods({\n\t\t'VideoCallServices/call': Services.call,\n\t\t'VideoCallServices/answer': Services.answer,\n\t\t'VideoCallServices/end': Services.end\n\t});\n\tMeteor.VideoCallServices = {\n\t\t/**\n\t\t * Callback envoked on error\n\t\t * @param err {Error}\n\t\t * @param data {Object}\n\t\t * @param user {Object}\n\t\t */\n\t\tonError(err, data, user){}\n\t};\n}","import { Meteor } from 'meteor/meteor';\nimport CallLog from './call_log';\nMeteor.publish('VideoChatPublication', function() {\n    return CallLog.find({\n        $or: [{\n            caller: this.userId,\n            status:{\n                $ne:\"FINISHED\"\n            }\n        }, {\n            target: this.userId,\n            status:{\n                $ne:\"FINISHED\"\n            }\n        }]\n    });\n});","import { Meteor } from 'meteor/meteor';\n\nexport default new Meteor.Collection(\"VideoChatCallLog\");","//jshint esversion: 6\nlet Meteor, Video;\nclass Client {\n\n\tconstructor( args ) {\n\t\tthis.callbacks = callbacks;\n\t\tthis.RTCConfiguration = {};\n\t\tthis.RetryLimit = 5;\n\t\tthis.RetryCount = 0;\n\t\tlet { meteor, tracker, video } = args;\n\t\tMeteor = meteor;\n\t\tVideo = video;\n\t\ttracker.autorun( () => {\n\t\t\tthis.sub = Meteor.subscribe( 'VideoChatPublication' );\n\t\t} );\n\t\tMeteor.connection._stream.on( 'message', this.handleStream.bind(this) );\n\n\t}\n\n\t/**\n\t * Handle the Video chat specific data in the DDP stream\n\t * @param msg {string}\n\t */\n\thandleStream( msg ) {\n\n\t\tmsg = JSON.parse( msg );\n\t\tif ( msg.collection === 'VideoChatCallLog'\n\t\t\t&& msg.msg === 'removed' ) {\n\t\t\tthis.onTerminateCall();\n\t\t}\n\t\tif ( msg.collection === 'VideoChatCallLog'\n\t\t\t&& msg.msg === 'added'\n\t\t\t&& msg.fields.target === Meteor.userId()\n\t\t\t&& msg.fields.status === \"NEW\" ) {\n\t\t\tthis.callLog = msg.fields;\n\t\t\tthis.stream = new Meteor.Streamer( msg.id );\n\t\t\tthis.stream.on( 'video_message', this.handleTargetStream.bind(this) );\n\t\t\tthis.onReceivePhoneCall( this.callLog.caller );\n\t\t}\n\t\tif ( msg.collection === 'VideoChatCallLog'\n\t\t\t&& msg.msg === 'added'\n\t\t\t&& msg.fields.caller === Meteor.userId()\n\t\t\t&& msg.fields.status === 'NEW' ) {\n\t\t\tthis.callLog = msg.fields;\n\t\t}\n\t\tif ( msg.msg === 'changed'\n\t\t\t&& msg.collection === 'VideoChatCallLog'\n\t\t\t&& msg.fields !== undefined ) {\n\t\t\tconst { fields } = msg;\n\t\t\tif ( fields.status === 'ACCEPTED' && this.callLog.caller === Meteor.userId() ) {\n\t\t\t\tthis.onTargetAccept();\n\t\t\t\tthis.handleTargetAccept();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Handle the stream data for the target user\n\t * @param streamData {string}\n\t */\n\thandleTargetStream( streamData ) {\n\t\tif ( typeof streamData === \"string\" ) {\n\t\t\tstreamData = JSON.parse( streamData );\n\t\t}\n\t\tif ( streamData.offer ) {\n\t\t\tnavigator.mediaDevices.getUserMedia( { audio: true, video: true } ).then( stream => {\n\t\t\t\tif ( this.localVideo ) {\n\t\t\t\t\tthis.localVideo.setStream( stream, true );\n\t\t\t\t\tthis.localVideo.play();\n\t\t\t\t}\n\t\t\t\tthis.setupPeerConnection( stream, streamData.offer );\n\t\t\t} ).catch( err => {\n\t\t\t\tthis.onError( err, streamData );\n\t\t\t} );\n\t\t}\n\t\tif ( streamData.candidate ) {\n\t\t\tif ( typeof streamData.candidate === \"string\" ){\n\t\t\t\tstreamData.candidate = JSON.parse( streamData.candidate );\n\t\t\t}\n\t\t\tconst candidate = streamData.candidate === {}\n\t\t\t|| streamData.candidate === null ? null : new RTCIceCandidate( streamData.candidate );\n\t\t\tif ( this.peerConnection )\n\t\t\t\tthis.peerConnection.addIceCandidate( candidate ).catch( err => {\n\t\t\t\t\tthis.onError( err, streamData );\n\t\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Handle the local mediaDevices when the target accepts the call\n\t */\n\thandleTargetAccept(){\n\t\tnavigator.mediaDevices.getUserMedia( { audio: true, video: true } ).then( stream => {\n\t\t\tif ( this.localVideo ) {\n\t\t\t\tthis.localVideo.pause();\n\t\t\t\tthis.localVideo.setStream( stream, true );\n\t\t\t\tthis.localVideo.play();\n\t\t\t}\n\t\t\tthis.setupPeerConnection( stream );\n\t\t} ).catch( err => {\n\t\t\tthis.onError( err, msg );\n\t\t} );\n\t}\n\t/**\n\t * Set up the peer connection\n\t * @param stream {MediaStream}\n\t * @param remoteDescription {RTCPeerConnection}\n\t */\n\tsetupPeerConnection( stream, remoteDescription ) {\n\t\tthis.peerConnection = new RTCPeerConnection( this.RTCConfiguration, { \"optional\": [ { 'googIPv6': false } ] } );\n\t\tthis.onPeerConnectionCreated();\n\t\tthis.setPeerConnectionCallbacks();\n\t\tthis.peerConnection.addStream( stream );\n\t\tif ( remoteDescription )\n\t\t\tthis.createTargetSession( remoteDescription );\n\t\telse\n\t\t\tthis.createCallSession();\n\t}\n\n\t/**\n\t * Set callback for RTCPeerConnection\n\t */\n\tsetPeerConnectionCallbacks() {\n\t\tthis.peerConnection.onicecandidate = ( event ) => {\n\n\t\t\tif ( event.candidate === undefined ) {\n\t\t\t\tevent.candidate = {};\n\t\t\t}\n\t\t\tthis.stream.emit( 'video_message', { candidate: JSON.stringify( event.candidate ) } );\n\t\t};\n\t\tthis.peerConnection.oniceconnectionstatechange = ( event ) => {\n\t\t\tif ( event.target.iceConnectionState === \"failed\" ) {\n\t\t\t\tthis.peerConnection = undefined;\n\t\t\t\tif ( this.RetryCount < this.RetryLimit ) {\n\t\t\t\t\tnavigator.mediaDevices.getUserMedia( { audio: true, video: true } ).then( stream => {\n\t\t\t\t\t\tthis.RetryCount++;\n\t\t\t\t\t\tif ( this.localVideo ) {\n\t\t\t\t\t\t\tthis.localVideo.pause();\n\t\t\t\t\t\t\tthis.localVideo.setStream( stream, true );\n\t\t\t\t\t\t\tthis.localVideo.play();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setupPeerConnection( stream );\n\t\t\t\t\t} ).catch( err => {\n\t\t\t\t\t\tthis.onError( err, msg );\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tconst error = new Error( 408, \"Could not establish connection\" );\n\t\t\t\t\tthis.onError( error );\n\t\t\t\t}\n\n\t\t\t}\n\t\t};\n\t\tthis.peerConnection.onaddstream = function ( stream ) {\n\t\t\tif ( this.remoteVideo ) {\n\t\t\t\tthis.remoteVideo.pause();\n\t\t\t\tthis.remoteVideo.setStream( stream.stream );\n\t\t\t\tthis.remoteVideo.play();\n\t\t\t}\n\t\t}.bind( this );\n\t}\n\n\t/**\n\t * Create the RTCPeerConnection for the person being called\n\t * @param remoteDescription {RemoteDescription}\n\t */\n\tcreateTargetSession( remoteDescription ) {\n\n\n\t\tthis.peerConnection.setRemoteDescription( remoteDescription ).then( () => {\n\n\t\t\tthis.peerConnection.createAnswer().then( answer => {\n\t\t\t\tthis.peerConnection.setLocalDescription( answer ).catch( err => {\n\t\t\t\t\tthis.onError( err, answer );\n\t\t\t\t} );\n\t\t\t\tthis.stream.emit( 'video_message', JSON.stringify( { answer } ) );\n\t\t\t} ).catch( err => {\n\t\t\t\tthis.onError( err, remoteDescription );\n\t\t\t} );\n\t\t} ).catch( err => {\n\t\t\tthis.onError( err, remoteDescription );\n\t\t} );\n\n\t}\n\n\tcreateCallSession() {\n\t\tthis.peerConnection.createOffer().then( offer => {\n\t\t\tthis.stream.emit( 'video_message', JSON.stringify( { offer } ) );\n\t\t\tthis.peerConnection.setLocalDescription( offer ).catch( err => {\n\t\t\t\tthis.onError( err, offer );\n\t\t\t} );\n\n\t\t} ).catch( err => this.onError( err ) );\n\t}\n\n\t/**\n\t * Call allows you to call a remote user using their userId\n\t * @param _id {string}\n\t * @param local {HTMLElement}\n\t * @remote remote {HTMLElement}\n\t */\n\tcall( _id, local, remote ) {\n\t\tthis.RetryCount = 0;\n\t\tif ( local )\n\t\t\tthis.localVideo = new Video( local );\n\t\tif ( remote )\n\t\t\tthis.remoteVideo = new Video( remote );\n\t\tMeteor.call( 'VideoCallServices/call', _id, this.callbacks.call.bind(this) );\n\t}\n\n\t/**\n\t * Handle the data stream for the caller\n\t * @param streamData {string}\n\t */\n\thandleCallerStream( streamData ){\n\t\t\tif ( typeof streamData === 'string' ){\n\t\t\t\tstreamData = JSON.parse( streamData );\n\t\t\t}\n\t\t\tif ( streamData.answer ) {\n\t\t\t\tthis.peerConnection.setRemoteDescription( streamData.answer ).catch( err => {\n\t\t\t\t\tthis.onError( err, streamData )\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tif ( streamData.candidate ) {\n\t\t\t\tif ( typeof streamData.candidate === 'string' )\n\t\t\t\t\tstreamData.candidate = JSON.parse( streamData.candidate );\n\t\t\t\tconst candidate = streamData.candidate === {}\n\t\t\t\t|| streamData.candidate === null ? null : new RTCIceCandidate( streamData.candidate );\n\t\t\t\tif ( this.peerConnection ){\n\t\t\t\t\tthis.peerConnection.addIceCandidate( streamData.candidate ).catch( err => {\n\t\t\t\t\t\tthis.onError( err, streamData );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t}\n\t/**\n\t * Answer the phone call\n\t * @param local {HTMLElement}\n\t * @param remote {HTMLElement}\n\t */\n\tanswerPhoneCall( local, remote ) {\n\t\tif ( local )\n\t\t\tthis.localVideo = new Video( local );\n\t\tif ( remote )\n\t\t\tthis.remoteVideo = new Video( remote );\n\t\tMeteor.call( 'VideoCallServices/answer', err => {\n\t\t\tif ( err )\n\t\t\t\tthis.onError( err );\n\t\t} );\n\t}\n\n\t/**\n\t * End the phone call\n\t */\n\tendPhoneCall() {\n\t\tMeteor.call( \"VideoCallServices/end\", err => {\n\t\t\tif ( err ){\n\t\t\t\tthis.onError( err );\n\t\t\t}\n\t\t} );\n\t}\n\n\n\tonTargetAccept() {\n\n\t}\n\n\tonReceivePhoneCall( fields ) {\n\n\t}\n\n\tonTerminateCall() {\n\n\t}\n\n\tonPeerConnectionCreated() {\n\n\t}\n\n\tonError( err ) {\n\n\t}\n}\nconst callbacks = {\n\tcall: function ( err, _id ) {\n\t\tthis.RetryCount++;\n\t\tif ( err )\n\t\t\tthis.onError( err, _id );\n\t\telse {\n\t\t\tthis.stream = new Meteor.Streamer( _id );\n\t\t\tthis.stream.on( 'video_message', this.handleCallerStream.bind(this) );\n\t\t}\n\t}\n};\n\nexport {\n\tClient\n};","//jshint esversion: 6\nimport {Meteor} from 'meteor/meteor';\nimport {check} from 'meteor/check';\nimport CallLog from './call_log';\n\nconst streams = {};\nconst Services = {\n    /**\n     * Call allows you to call a remote user using their userId\n     * @param _id {string}\n     */\n    call(_id){\n        check(_id, String);\n        const meteorUser = Meteor.user();\n        if (!meteorUser) {\n            const err = new Meteor.Error(403, \"USER_NOT_LOGGED_IN\", {\n                caller: meteorUser._id,\n                target: _id\n            });\n            Meteor.VideoCallServices.onError(err);\n            throw err;\n        }\n        if (Services.checkConnect(meteorUser._id, _id)) {\n            const inCall = CallLog.findOne({\n                status: \"CONNECTED\",\n                target: _id\n            });\n            if (inCall) {\n                const err = new Meteor.Error(500, \"TARGET_IN_CALL\", inCall);\n                Meteor.VideoCallServices.onError(err, inCall, Meteor.userId());\n                throw err;\n            }\n            else {\n                CallLog.update({\n                    $or: [{\n                        status: {\n                            $ne: \"FINISHED\"\n                        },\n                        caller: meteorUser._id\n                    }, {\n                        status: {\n                            $ne: \"FINISHED\"\n                        },\n                        target: meteorUser._id\n                    }]\n\n                }, {\n                    $set: {\n                        status: \"FINISHED\"\n                    }\n                });\n                const logId = CallLog.insert({\n                    status: \"NEW\",\n                    target: _id,\n                    caller: meteorUser._id\n                });\n                streams[logId] = new Meteor.Streamer(logId);\n                streams[logId].allowRead('all');\n                streams[logId].allowWrite('all');\n                return logId;\n            }\n        } else {\n            const err = new Meteor.Error(403, \"CONNECTION_NOT_ALLOWED\", {\n                target: meteorUser._id,\n                caller: _id\n            });\n            Meteor.VideoCallServices.onError(err, _id, meteorUser);\n            throw err;\n        }\n\n    },\n    /**\n     * Check if call connection should be permitted\n     * @param _id {caller}\n     * @param _id {target}\n     * @returns boolean\n     */\n    checkConnect(caller, target){\n        return true;\n    },\n    /**\n     * Answer current phone call\n     */\n    answer(){\n        const user = Meteor.user();\n        if (!user) {\n            const err = new Meteor.Error(403, \"USER_NOT_LOGGED_IN\");\n            Meteor.VideoCallServices.onError(err);\n            throw err;\n        }\n        const session = CallLog.findOne({\n            target: user._id,\n            status: 'NEW'\n        });\n        if (!session) {\n            const err = new Meteor.Error(500, 'SESSION_NOT_FOUND', {\n                target: user._id\n            });\n            Meteor.VideoCallServices.onError(err, undefined, user);\n            throw err;\n        }\n\n        else {\n            CallLog.update({\n                _id: session._id\n            }, {\n                $set: {\n                    status: 'ACCEPTED'\n                }\n            });\n        }\n    },\n    /**\n     * End current phone call\n     */\n    end(){\n        const _id = Meteor.userId();\n        CallLog.find({\n            $or: [{\n                status: {\n                    $ne: 'FINISHED'\n                },\n                target: _id\n            }, {\n                status: {\n                    $ne: 'FINISHED'\n                },\n                caller: _id\n            }]\n        }).forEach(call =>\n            CallLog.update({\n                _id: call._id\n            }, {\n                $set: {\n                    status: 'FINISHED'\n                }\n            }));\n    }\n};\n\nexport {\n    Services\n};","class Video {\n\t/**\n\t * Wrap video to allow stabler manipulation\n\t * @param video {HTMLElement}\n\t */\n\tconstructor ( video ){\n\t\tthis.onPlaying = false;\n\t\tthis.onPause = false;\n\t\tif( !video ) {\n\t\t\tthrow new Error( \"Video element not found\" );\n\t\t} else {\n\t\t\tthis.element = video;\n\t\t\tthis.element.onplaying = () => {\n\t\t\t\tthis.onPlaying = true;\n\t\t\t\tthis.onPause = false;\n\t\t\t};\n\t\t\tthis.element.onpause = () => {\n\t\t\t\tthis.onPlaying = false;\n\t\t\t\tthis.onPause = true;\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Pause the video element\n\t */\n\tpause(){\n\t\tif (!this.element.paused && !this.onPause) {\n\t\t\tthis.element.pause();\n\t\t}\n\t}\n\n\t/**\n\t * Play the video element\n\t */\n\tplay(){\n\t\tif (this.element.paused && !this.onPlaying) {\n\t\t\tthis.element.play().then(_ => {\n\t\t\t\t// Automatic playback started!\n\t\t\t\t// Show playing UI.\n\t\t\t\t// We can now safely pause video...\n\t\t\t\tconsole.log(\"video playing\");\n\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\t// Auto-play was prevented\n\t\t\t\t\t// Show paused UI.\n\t\t\t\t\tconsole.log(\"video error\", error);\n\t\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Set the video stream\n\t * @param stream {MediaStream}\n\t * @param muted {Boolean}\n\t */\n\tsetStream(stream, muted){\n\t\tthis.element.srcObject = stream;\n\t\tif( muted !== undefined ) {\n\t\t\tthis.element.muted = muted;\n\t\t} else {\n\t\t\tthis.element.muted = false;\n\t\t}\n\t}\n}\nexport {\n\tVideo\n};"]}