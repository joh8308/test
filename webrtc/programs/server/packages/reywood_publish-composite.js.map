{"version":3,"sources":["meteor://ðŸ’»app/packages/reywood:publish-composite/lib/publish_composite.js","meteor://ðŸ’»app/packages/reywood:publish-composite/lib/doc_ref_counter.js","meteor://ðŸ’»app/packages/reywood:publish-composite/lib/logging.js","meteor://ðŸ’»app/packages/reywood:publish-composite/lib/publication.js","meteor://ðŸ’»app/packages/reywood:publish-composite/lib/subscription.js","meteor://ðŸ’»app/packages/reywood:publish-composite/lib/published_document.js","meteor://ðŸ’»app/packages/reywood:publish-composite/lib/published_document_list.js"],"names":["module","export","enableDebugLogging","publishComposite","_","watch","require","v","Meteor","Publication","Subscription","debugLog","name","options","publish","subscription","args","instanceOptions","prepareOptions","call","publications","forEach","opt","pub","push","onStop","unpublish","ready","preparedOptions","apply","isArray","DocumentRefCounter","observer","heap","increment","collectionName","docId","key","valueOf","decrement","onChange","exportDefault","debugLoggingEnabled","source","message","paddedSource","length","console","log","Match","check","PublishedDocumentList","find","Function","children","Optional","Object","String","childrenOptions","publishedDocs","cursor","_getCursor","_getCollectionName","observeHandle","observe","added","bindEnvironment","doc","alreadyPublished","has","_id","unflagForRemoval","_republishChildrenOf","changed","add","_publishChildrenOf","newDoc","removed","_removeDoc","observeChangesHandle","observeChanges","id","fields","_stopObservingCursor","_unpublishAllDocuments","_republish","flagAllForRemoval","_removeFlaggedDocs","meteorSub","each","createChildPublication","concat","addChildPub","eachChildPub","publication","eachDocument","stop","isFlaggedForRemoval","_unpublishChildrenOf","remove","docHash","refCounter","refCount","_removeDocHash","_hasDocChanged","_addDocHash","changes","_shouldSendChanges","_updateDocHash","buildHashKey","existingDoc","extend","_isDocPublished","any","keys","isEqual","PublishedDocument","childPublications","_isFlaggedForRemoval","childPublication","callback","flagForRemoval","documents","valueOfId","Error","get","context","execCallbackOnDoc","getIds","docIds"],"mappings":"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","file":"/packages/reywood_publish-composite.js","sourcesContent":["import { _ } from 'meteor/underscore';\nimport { Meteor } from 'meteor/meteor';\n\nimport Publication from './publication';\nimport Subscription from './subscription';\nimport { debugLog, enableDebugLogging } from './logging';\n\n\nfunction publishComposite(name, options) {\n    return Meteor.publish(name, function publish(...args) {\n        const subscription = new Subscription(this);\n        const instanceOptions = prepareOptions.call(this, options, args);\n        const publications = [];\n\n        instanceOptions.forEach((opt) => {\n            const pub = new Publication(subscription, opt);\n            pub.publish();\n            publications.push(pub);\n        });\n\n        this.onStop(() => {\n            publications.forEach(pub => pub.unpublish());\n        });\n\n        debugLog('Meteor.publish', 'ready');\n        this.ready();\n    });\n}\n\n// For backwards compatibility\nMeteor.publishComposite = publishComposite;\n\nfunction prepareOptions(options, args) {\n    let preparedOptions = options;\n\n    if (typeof preparedOptions === 'function') {\n        preparedOptions = preparedOptions.apply(this, args);\n    }\n\n    if (!preparedOptions) {\n        return [];\n    }\n\n    if (!_.isArray(preparedOptions)) {\n        preparedOptions = [preparedOptions];\n    }\n\n    return preparedOptions;\n}\n\n\nexport {\n    enableDebugLogging,\n    publishComposite,\n};\n","class DocumentRefCounter {\n    constructor(observer) {\n        this.heap = {};\n        this.observer = observer;\n    }\n\n    increment(collectionName, docId) {\n        const key = `${collectionName}:${docId.valueOf()}`;\n        if (!this.heap[key]) {\n            this.heap[key] = 0;\n        }\n        this.heap[key] += 1;\n    }\n\n    decrement(collectionName, docId) {\n        const key = `${collectionName}:${docId.valueOf()}`;\n        if (this.heap[key]) {\n            this.heap[key] -= 1;\n\n            this.observer.onChange(collectionName, docId, this.heap[key]);\n        }\n    }\n}\n\nexport default DocumentRefCounter;\n","/* eslint-disable no-console */\n\nlet debugLoggingEnabled = false;\n\nfunction debugLog(source, message) {\n    if (!debugLoggingEnabled) { return; }\n    let paddedSource = source;\n    while (paddedSource.length < 35) { paddedSource += ' '; }\n    console.log(`[${paddedSource}] ${message}`);\n}\n\nfunction enableDebugLogging() {\n    debugLoggingEnabled = true;\n}\n\nexport {\n    debugLog,\n    enableDebugLogging,\n};\n","import { Meteor } from 'meteor/meteor';\nimport { Match, check } from 'meteor/check';\nimport { _ } from 'meteor/underscore';\n\nimport { debugLog } from './logging';\nimport PublishedDocumentList from './published_document_list';\n\n\nclass Publication {\n    constructor(subscription, options, args) {\n        check(options, {\n            find: Function,\n            children: Match.Optional([Object]),\n            collectionName: Match.Optional(String),\n        });\n\n        this.subscription = subscription;\n        this.options = options;\n        this.args = args || [];\n        this.childrenOptions = options.children || [];\n        this.publishedDocs = new PublishedDocumentList();\n        this.collectionName = options.collectionName;\n    }\n\n    publish() {\n        this.cursor = this._getCursor();\n        if (!this.cursor) { return; }\n\n        const collectionName = this._getCollectionName();\n\n        // Use Meteor.bindEnvironment to make sure the callbacks are run with the same\n        // environmentVariables as when publishing the \"parent\".\n        // It's only needed when publish is being recursively run.\n        this.observeHandle = this.cursor.observe({\n            added: Meteor.bindEnvironment((doc) => {\n                const alreadyPublished = this.publishedDocs.has(doc._id);\n\n                if (alreadyPublished) {\n                    debugLog('Publication.observeHandle.added', `${collectionName}:${doc._id} already published`);\n                    this.publishedDocs.unflagForRemoval(doc._id);\n                    this._republishChildrenOf(doc);\n                    this.subscription.changed(collectionName, doc._id, doc);\n                } else {\n                    this.publishedDocs.add(collectionName, doc._id);\n                    this._publishChildrenOf(doc);\n                    this.subscription.added(collectionName, doc);\n                }\n            }),\n            changed: Meteor.bindEnvironment((newDoc) => {\n                debugLog('Publication.observeHandle.changed', `${collectionName}:${newDoc._id}`);\n                this._republishChildrenOf(newDoc);\n            }),\n            removed: (doc) => {\n                debugLog('Publication.observeHandle.removed', `${collectionName}:${doc._id}`);\n                this._removeDoc(collectionName, doc._id);\n            },\n        });\n\n        this.observeChangesHandle = this.cursor.observeChanges({\n            changed: (id, fields) => {\n                debugLog('Publication.observeChangesHandle.changed', `${collectionName}:${id}`);\n                this.subscription.changed(collectionName, id, fields);\n            },\n        });\n    }\n\n    unpublish() {\n        debugLog('Publication.unpublish', this._getCollectionName());\n        this._stopObservingCursor();\n        this._unpublishAllDocuments();\n    }\n\n    _republish() {\n        this._stopObservingCursor();\n\n        this.publishedDocs.flagAllForRemoval();\n\n        debugLog('Publication._republish', 'run .publish again');\n        this.publish();\n\n        debugLog('Publication._republish', 'unpublish docs from old cursor');\n        this._removeFlaggedDocs();\n    }\n\n    _getCursor() {\n        return this.options.find.apply(this.subscription.meteorSub, this.args);\n    }\n\n    _getCollectionName() {\n        return this.collectionName || (this.cursor && this.cursor._getCollectionName());\n    }\n\n    _publishChildrenOf(doc) {\n        _.each(this.childrenOptions, function createChildPublication(options) {\n            const pub = new Publication(this.subscription, options, [doc].concat(this.args));\n            this.publishedDocs.addChildPub(doc._id, pub);\n            pub.publish();\n        }, this);\n    }\n\n    _republishChildrenOf(doc) {\n        this.publishedDocs.eachChildPub(doc._id, (publication) => {\n            publication.args[0] = doc;\n            publication._republish();\n        });\n    }\n\n    _unpublishAllDocuments() {\n        this.publishedDocs.eachDocument((doc) => {\n            this._removeDoc(doc.collectionName, doc.docId);\n        }, this);\n    }\n\n    _stopObservingCursor() {\n        debugLog('Publication._stopObservingCursor', 'stop observing cursor');\n\n        if (this.observeHandle) {\n            this.observeHandle.stop();\n            delete this.observeHandle;\n        }\n\n        if (this.observeChangesHandle) {\n            this.observeChangesHandle.stop();\n            delete this.observeChangesHandle;\n        }\n    }\n\n    _removeFlaggedDocs() {\n        this.publishedDocs.eachDocument((doc) => {\n            if (doc.isFlaggedForRemoval()) {\n                this._removeDoc(doc.collectionName, doc.docId);\n            }\n        }, this);\n    }\n\n    _removeDoc(collectionName, docId) {\n        this.subscription.removed(collectionName, docId);\n        this._unpublishChildrenOf(docId);\n        this.publishedDocs.remove(docId);\n    }\n\n    _unpublishChildrenOf(docId) {\n        debugLog('Publication._unpublishChildrenOf', `unpublishing children of ${this._getCollectionName()}:${docId}`);\n\n        this.publishedDocs.eachChildPub(docId, (publication) => {\n            publication.unpublish();\n        });\n    }\n}\n\nexport default Publication;\n","import { _ } from 'meteor/underscore';\n\nimport DocumentRefCounter from './doc_ref_counter';\nimport { debugLog } from './logging';\n\n\nclass Subscription {\n    constructor(meteorSub) {\n        this.meteorSub = meteorSub;\n        this.docHash = {};\n        this.refCounter = new DocumentRefCounter({\n            onChange: (collectionName, docId, refCount) => {\n                debugLog('Subscription.refCounter.onChange', `${collectionName}:${docId.valueOf()} ${refCount}`);\n                if (refCount <= 0) {\n                    meteorSub.removed(collectionName, docId);\n                    this._removeDocHash(collectionName, docId);\n                }\n            },\n        });\n    }\n\n    added(collectionName, doc) {\n        this.refCounter.increment(collectionName, doc._id);\n\n        if (this._hasDocChanged(collectionName, doc._id, doc)) {\n            debugLog('Subscription.added', `${collectionName}:${doc._id}`);\n            this.meteorSub.added(collectionName, doc._id, doc);\n            this._addDocHash(collectionName, doc);\n        }\n    }\n\n    changed(collectionName, id, changes) {\n        if (this._shouldSendChanges(collectionName, id, changes)) {\n            debugLog('Subscription.changed', `${collectionName}:${id}`);\n            this.meteorSub.changed(collectionName, id, changes);\n            this._updateDocHash(collectionName, id, changes);\n        }\n    }\n\n    removed(collectionName, id) {\n        debugLog('Subscription.removed', `${collectionName}:${id.valueOf()}`);\n        this.refCounter.decrement(collectionName, id);\n    }\n\n    _addDocHash(collectionName, doc) {\n        this.docHash[buildHashKey(collectionName, doc._id)] = doc;\n    }\n\n    _updateDocHash(collectionName, id, changes) {\n        const key = buildHashKey(collectionName, id);\n        const existingDoc = this.docHash[key] || {};\n        this.docHash[key] = _.extend(existingDoc, changes);\n    }\n\n    _shouldSendChanges(collectionName, id, changes) {\n        return this._isDocPublished(collectionName, id) &&\n            this._hasDocChanged(collectionName, id, changes);\n    }\n\n    _isDocPublished(collectionName, id) {\n        const key = buildHashKey(collectionName, id);\n        return !!this.docHash[key];\n    }\n\n    _hasDocChanged(collectionName, id, doc) {\n        const existingDoc = this.docHash[buildHashKey(collectionName, id)];\n\n        if (!existingDoc) { return true; }\n\n        return _.any(_.keys(doc), key => !_.isEqual(doc[key], existingDoc[key]));\n    }\n\n    _removeDocHash(collectionName, id) {\n        const key = buildHashKey(collectionName, id);\n        delete this.docHash[key];\n    }\n}\n\nfunction buildHashKey(collectionName, id) {\n    return `${collectionName}::${id.valueOf()}`;\n}\n\nexport default Subscription;\n","class PublishedDocument {\n    constructor(collectionName, docId) {\n        this.collectionName = collectionName;\n        this.docId = docId;\n        this.childPublications = [];\n        this._isFlaggedForRemoval = false;\n    }\n\n    addChildPub(childPublication) {\n        this.childPublications.push(childPublication);\n    }\n\n    eachChildPub(callback) {\n        this.childPublications.forEach(callback);\n    }\n\n    isFlaggedForRemoval() {\n        return this._isFlaggedForRemoval;\n    }\n\n    unflagForRemoval() {\n        this._isFlaggedForRemoval = false;\n    }\n\n    flagForRemoval() {\n        this._isFlaggedForRemoval = true;\n    }\n}\n\nexport default PublishedDocument;\n","import { _ } from 'meteor/underscore';\n\nimport PublishedDocument from './published_document';\n\n\nclass PublishedDocumentList {\n    constructor() {\n        this.documents = {};\n    }\n\n    add(collectionName, docId) {\n        const key = valueOfId(docId);\n\n        if (!this.documents[key]) {\n            this.documents[key] = new PublishedDocument(collectionName, docId);\n        }\n    }\n\n    addChildPub(docId, publication) {\n        if (!publication) { return; }\n\n        const key = valueOfId(docId);\n        const doc = this.documents[key];\n\n        if (typeof doc === 'undefined') {\n            throw new Error(`Doc not found in list: ${key}`);\n        }\n\n        this.documents[key].addChildPub(publication);\n    }\n\n    get(docId) {\n        const key = valueOfId(docId);\n        return this.documents[key];\n    }\n\n    remove(docId) {\n        const key = valueOfId(docId);\n        delete this.documents[key];\n    }\n\n    has(docId) {\n        return !!this.get(docId);\n    }\n\n    eachDocument(callback, context) {\n        _.each(this.documents, function execCallbackOnDoc(doc) {\n            callback.call(this, doc);\n        }, context || this);\n    }\n\n    eachChildPub(docId, callback) {\n        const doc = this.get(docId);\n\n        if (doc) {\n            doc.eachChildPub(callback);\n        }\n    }\n\n    getIds() {\n        const docIds = [];\n\n        this.eachDocument((doc) => {\n            docIds.push(doc.docId);\n        });\n\n        return docIds;\n    }\n\n    unflagForRemoval(docId) {\n        const doc = this.get(docId);\n\n        if (doc) {\n            doc.unflagForRemoval();\n        }\n    }\n\n    flagAllForRemoval() {\n        this.eachDocument((doc) => {\n            doc.flagForRemoval();\n        });\n    }\n}\n\nfunction valueOfId(docId) {\n    if (docId === null) {\n        throw new Error('Document ID is null');\n    }\n    if (typeof docId === 'undefined') {\n        throw new Error('Document ID is undefined');\n    }\n    return docId.valueOf();\n}\n\nexport default PublishedDocumentList;\n"]}