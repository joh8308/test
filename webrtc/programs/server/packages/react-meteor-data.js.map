{"version":3,"sources":["meteor://ðŸ’»app/packages/react-meteor-data/react-meteor-data.jsx","meteor://ðŸ’»app/packages/react-meteor-data/ReactMeteorData.jsx","meteor://ðŸ’»app/packages/react-meteor-data/createContainer.jsx","meteor://ðŸ’»app/packages/react-meteor-data/withTracker.jsx"],"names":["module","watch","require","v","exports","createContainer","withTracker","ReactMeteorData","checkNpmVersions","react","export","connect","React","Meteor","Tracker","MeteorDataManager","component","computation","oldData","dispose","stop","calculateData","getMeteorData","isServer","data","nonreactive","autorun","c","firstRun","savedSetState","setState","Error","forceUpdate","Package","mongo","Mongo","Object","keys","forEach","key","Cursor","console","warn","updateData","newData","componentWillMount","_meteorDataManager","componentWillUpdate","nextProps","nextState","saveProps","props","saveState","state","componentWillUnmount","ReactComponent","Component","assign","prototype","ReactPureComponent","PureComponent","pure","BaseComponent","WrappedComponent","render","options","expandedOptions","fn","C","exportDefault"],"mappings":"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","file":"/packages/react-meteor-data.js","sourcesContent":["import { checkNpmVersions } from 'meteor/tmeasday:check-npm-versions';\n\ncheckNpmVersions({\n  react: '15.x',\n}, 'react-meteor-data');\n\nexport { default as createContainer } from './createContainer.jsx';\nexport { default as withTracker } from './withTracker.jsx';\nexport { ReactMeteorData } from './ReactMeteorData.jsx';\n","/* global Package */\n/* eslint-disable react/prefer-stateless-function */\n\nimport React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\n// A class to keep the state and utility methods needed to manage\n// the Meteor data for a component.\nclass MeteorDataManager {\n  constructor(component) {\n    this.component = component;\n    this.computation = null;\n    this.oldData = null;\n  }\n\n  dispose() {\n    if (this.computation) {\n      this.computation.stop();\n      this.computation = null;\n    }\n  }\n\n  calculateData() {\n    const component = this.component;\n\n    if (!component.getMeteorData) {\n      return null;\n    }\n\n    // When rendering on the server, we don't want to use the Tracker.\n    // We only do the first rendering on the server so we can get the data right away\n    if (Meteor.isServer) {\n      return component.getMeteorData();\n    }\n\n    if (this.computation) {\n      this.computation.stop();\n      this.computation = null;\n    }\n\n    let data;\n    // Use Tracker.nonreactive in case we are inside a Tracker Computation.\n    // This can happen if someone calls `ReactDOM.render` inside a Computation.\n    // In that case, we want to opt out of the normal behavior of nested\n    // Computations, where if the outer one is invalidated or stopped,\n    // it stops the inner one.\n    this.computation = Tracker.nonreactive(() => (\n      Tracker.autorun((c) => {\n        if (c.firstRun) {\n          const savedSetState = component.setState;\n          try {\n            component.setState = () => {\n              throw new Error(\n                'Can\\'t call `setState` inside `getMeteorData` as this could '\n                + 'cause an endless loop. To respond to Meteor data changing, '\n                + 'consider making this component a \\\"wrapper component\\\" that '\n                + 'only fetches data and passes it in as props to a child '\n                + 'component. Then you can use `componentWillReceiveProps` in '\n                + 'that child component.');\n            };\n\n            data = component.getMeteorData();\n          } finally {\n            component.setState = savedSetState;\n          }\n        } else {\n          // Stop this computation instead of using the re-run.\n          // We use a brand-new autorun for each call to getMeteorData\n          // to capture dependencies on any reactive data sources that\n          // are accessed.  The reason we can't use a single autorun\n          // for the lifetime of the component is that Tracker only\n          // re-runs autoruns at flush time, while we need to be able to\n          // re-call getMeteorData synchronously whenever we want, e.g.\n          // from componentWillUpdate.\n          c.stop();\n          // Calling forceUpdate() triggers componentWillUpdate which\n          // recalculates getMeteorData() and re-renders the component.\n          component.forceUpdate();\n        }\n      })\n    ));\n\n    if (Package.mongo && Package.mongo.Mongo) {\n      Object.keys(data).forEach((key) => {\n        if (data[key] instanceof Package.mongo.Mongo.Cursor) {\n          console.warn(\n            'Warning: you are returning a Mongo cursor from getMeteorData. '\n            + 'This value will not be reactive. You probably want to call '\n            + '`.fetch()` on the cursor before returning it.'\n          );\n        }\n      });\n    }\n\n    return data;\n  }\n\n  updateData(newData) {\n    const component = this.component;\n    const oldData = this.oldData;\n\n    if (!(newData && (typeof newData) === 'object')) {\n      throw new Error('Expected object returned from getMeteorData');\n    }\n    // update componentData in place based on newData\n    for (let key in newData) {\n      component.data[key] = newData[key];\n    }\n    // if there is oldData (which is every time this method is called\n    // except the first), delete keys in newData that aren't in\n    // oldData.  don't interfere with other keys, in case we are\n    // co-existing with something else that writes to a component's\n    // this.data.\n    if (oldData) {\n      for (let key in oldData) {\n        if (!(key in newData)) {\n          delete component.data[key];\n        }\n      }\n    }\n    this.oldData = newData;\n  }\n}\n\nexport const ReactMeteorData = {\n  componentWillMount() {\n    this.data = {};\n    this._meteorDataManager = new MeteorDataManager(this);\n    const newData = this._meteorDataManager.calculateData();\n    this._meteorDataManager.updateData(newData);\n  },\n\n  componentWillUpdate(nextProps, nextState) {\n    const saveProps = this.props;\n    const saveState = this.state;\n    let newData;\n    try {\n      // Temporarily assign this.state and this.props,\n      // so that they are seen by getMeteorData!\n      // This is a simulation of how the proposed Observe API\n      // for React will work, which calls observe() after\n      // componentWillUpdate and after props and state are\n      // updated, but before render() is called.\n      // See https://github.com/facebook/react/issues/3398.\n      this.props = nextProps;\n      this.state = nextState;\n      newData = this._meteorDataManager.calculateData();\n    } finally {\n      this.props = saveProps;\n      this.state = saveState;\n    }\n\n    this._meteorDataManager.updateData(newData);\n  },\n\n  componentWillUnmount() {\n    this._meteorDataManager.dispose();\n  },\n};\n\nclass ReactComponent extends React.Component {}\nObject.assign(ReactComponent.prototype, ReactMeteorData);\nclass ReactPureComponent extends React.PureComponent {}\nObject.assign(ReactPureComponent.prototype, ReactMeteorData);\n\nexport function connect({ getMeteorData, pure = true }) {\n  const BaseComponent = pure ? ReactPureComponent : ReactComponent;\n  return (WrappedComponent) => (\n    class ReactMeteorDataComponent extends BaseComponent {\n      getMeteorData() {\n        return getMeteorData(this.props);\n      }\n      render() {\n        return <WrappedComponent {...this.props} {...this.data} />;\n      }\n    }\n  );\n}\n","/**\n * Container helper using react-meteor-data.\n */\n\nimport React from 'react';\nimport { connect } from './ReactMeteorData.jsx';\n\nexport default function createContainer(options = {}, Component) {\n  let expandedOptions = options;\n  if (typeof options === 'function') {\n    expandedOptions = {\n      getMeteorData: options,\n    };\n  }\n\n  return connect(expandedOptions)(Component);\n}\n","import createContainer from './createContainer';\n\nconst withTracker = fn => C => createContainer(fn, C);\n\nexport default withTracker;\n"]}